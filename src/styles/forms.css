/* Form Components - Consolidated & Consistent */

/* Base form styling */
ul, ol {
  margin-left: 20px;
}

/* Recipe creation form */
.recipe-creation-form {
  margin-bottom: var(--space-2xl);
}

.recipe-creation-form .card {
  border: 2px solid var(--color-primary-light);
  box-shadow: var(--shadow-md);
}

.recipe-creation-form .card-header {
  background: linear-gradient(45deg, var(--color-primary-light), var(--color-primary-dark));
  color: var(--bg-white);
}

/* Input group styling */
.recipe-creation-form .input-group-text {
  min-width: 45px;
  justify-content: center;
}

/* Ingredient form styling */
.ingredient-edit-item .input-group {
  display: flex;
  align-items: stretch; /* Ensure all elements stretch to same height */
}

.ingredient-edit-item .input-group-text {
  min-width: 45px;
  border-right: 0;
  background-color: var(--color-primary-bg);
  border-color: var(--color-primary-accent);
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.ingredient-edit-item .ingredient-input {
  border-left: 0;
  border-right: 0;
}

.ingredient-edit-item .remove-btn {
  border-left: 0;
  align-self: stretch !important; /* Ensure button stretches to match input height */
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  height: auto !important;
  min-height: var(--input-height) !important;
}

/* Ingredient checkbox styling */
.ingredient-added-checkbox {
  transform: scale(1.1);
  margin: 0;
}

/* Ingredient states - checked = ready for shopping */
.ingredient-edit-item:has(.ingredient-added-checkbox:checked) .input-group-text {
  background-color: var(--color-primary-bg);
  border-color: var(--color-primary-accent);
}

.ingredient-edit-item:has(.ingredient-added-checkbox:checked) .ingredient-input {
  background-color: var(--bg-white);
  border-color: var(--border-primary);
  text-decoration: none;
  opacity: 1;
  color: var(--text-primary);
}

.ingredient-edit-item:has(.ingredient-added-checkbox:checked) .remove-btn {
  border-color: var(--border-primary);
  background-color: var(--bg-light);
  color: var(--text-light);
}

/* Ingredient states - unchecked = used/completed */
.ingredient-edit-item:has(.ingredient-added-checkbox:not(:checked)) .input-group-text {
  background-color: var(--bg-muted);
  border-color: var(--border-primary);
}

.ingredient-edit-item:has(.ingredient-added-checkbox:not(:checked)) .ingredient-input {
  background-color: var(--bg-very-light);
  border-color: var(--border-primary);
  text-decoration: none;
  opacity: 1;
  color: var(--text-muted);
  font-style: italic;
}

.ingredient-edit-item:has(.ingredient-added-checkbox:not(:checked)) .remove-btn {
  border-color: var(--border-primary);
}

/* Notes form styling - same alignment fixes as ingredients */
#notes-container .input-group {
  display: flex;
  align-items: stretch; /* Ensure all elements stretch to same height */
}

#notes-container .remove-btn {
  border-left: 0;
  align-self: stretch !important; /* Ensure button stretches to match input height */
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  height: auto !important;
  min-height: var(--input-height) !important;
}

/* Instruction textarea styling */
.instruction-input {
  resize: vertical;
  min-height: var(--input-height);
  height: auto;
  overflow: hidden;
}

.instruction-input:focus {
  min-height: var(--input-height-focus);
}

/* Alert styling */
.alert {
  border-radius: var(--radius-lg);
}

/* Step controls container */
.step-controls {
  display: flex;
  flex-direction: column;
  gap: 2px;
}

/* Tags UI */
.tags-container {
  min-height: 40px;
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  padding: var(--space-sm);
  background-color: var(--bg-white);
  display: none; /* Hide until tags are added */
  flex-wrap: wrap;
  gap: var(--space-sm);
  align-items: flex-start;
}

.tags-container.has-tags {
  display: flex;
}

.tags-container:focus-within {
  border-color: var(--border-active);
  box-shadow: var(--shadow-focus);
}

.tag-item {
  background-color: var(--color-primary);
  color: var(--bg-white);
  padding: var(--space-xs) var(--space-sm);
  border-radius: var(--radius-xl);
  font-size: var(--font-size-md);
  display: inline-flex;
  align-items: center;
  gap: var(--space-sm);
  max-width: 200px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.tag-remove {
  background-color: transparent;
  border: none;
  color: var(--bg-white);
  padding: 0;
  margin: 0;
  cursor: pointer;
  width: var(--icon-size-sm);
  height: var(--icon-size-sm);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  flex-shrink: 0;
  transition: var(--transition-fast);
  font-weight: var(--font-weight-medium);
}

.tag-remove:hover {
  background-color: rgba(220, 53, 69, 0.9);
  border-color: var(--color-danger);
  transform: translateY(-1px);
  box-shadow: var(--shadow-sm);
}

.tag-remove:focus {
  outline: none;
  background-color: rgba(220, 53, 69, 0.9);
  border-color: var(--color-danger);
  box-shadow: var(--shadow-danger-focus);
}

/* Step item styling for drag and drop */
.step-item {
  position: relative;
  transition: all 0.2s ease;
  border-radius: var(--radius-md);
}

.step-item.dragging {
  opacity: 0.6;
  transform: scale(0.95);
  z-index: 1000;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.step-item.drag-over {
  border: 2px dashed var(--color-primary);
  background-color: rgba(13, 110, 253, 0.1);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(13, 110, 253, 0.2);
}

/* Drop zone indicators */
.step-item.drop-above::before {
  content: '';
  position: absolute;
  top: -2px;
  left: 0;
  right: 0;
  height: 4px;
  background: var(--color-primary);
  border-radius: 2px;
  z-index: 10;
  animation: pulse 0.6s ease-in-out infinite alternate;
}

.step-item.drop-below::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  right: 0;
  height: 4px;
  background: var(--color-primary);
  border-radius: 2px;
  z-index: 10;
  animation: pulse 0.6s ease-in-out infinite alternate;
}

@keyframes pulse {
  from { opacity: 0.5; }
  to { opacity: 1; }
}

/* Step-specific input group styling */
.step-item .input-group {
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);
  border-radius: var(--radius-md);
  overflow: hidden;
  display: flex !important;
  align-items: stretch !important;
  min-height: auto !important;
  height: auto !important;
}

.step-item .input-group > * {
  align-self: stretch !important;
  height: auto !important;
}

.step-item .input-group > .form-control.instruction-input {
  height: auto !important;
  min-height: var(--input-height) !important;
  max-height: none !important;
}

.step-item .input-group:focus-within {
  box-shadow: var(--shadow-focus);
}

.step-item .input-group .instruction-input {
  min-height: var(--input-height) !important;
  height: fit-content !important;
  resize: none !important;
  flex: 1 1 auto !important;
  line-height: 1.5 !important;
  padding: 0.375rem 0.75rem !important;
  overflow-y: hidden !important;
}

/* Step drag handle styling */
.step-drag-handle {
  display: flex;
  align-items: center;
  cursor: grab;
  padding: 0.375rem 0.75rem;
  user-select: none;
  background-color: var(--bg-light);
  border: 1px solid var(--border-primary);
  border-left: 0;
  border-right: 0;
  transition: var(--transition-fast);
  min-width: 2.5rem;
  justify-content: center;
  /* Remove fixed height constraints and let it stretch */
  height: auto !important;
  align-self: stretch !important;
  flex-shrink: 0 !important;
  /* Match the textarea exactly */
  min-height: var(--input-height) !important;
}

.step-drag-handle:active {
  cursor: grabbing;
}

.step-drag-handle:hover {
  color: var(--color-primary) !important;
  background-color: rgba(13, 110, 253, 0.1);
}

/* Step input group improvements */
.step-item .input-group-text {
  align-self: stretch !important;
  display: flex !important;
  align-items: center !important;
  height: auto !important;
  min-height: var(--input-height) !important;
}

/* Step instruction input improvements */
.step-item .input-group .instruction-input {
  min-height: var(--input-height) !important;
}

.step-item .input-group .instruction-input:focus {
  min-height: var(--input-height) !important;
  height: fit-content !important;
}